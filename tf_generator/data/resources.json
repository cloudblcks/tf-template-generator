[
  {
    "key": "s3",
    "category": "storage",
    "clouds": [
      "aws"
    ],
    "tags": [
      "storage"
    ],
    "description": "Amazon Web Services static storage",
    "params": [
      {
        "param": "bucket_name",
        "description": "Unique identifier for the bucket. Must be unique across all AWS accounts. If not provided, default name will be generated",
        "data_type": "string",
        "required": false
      }
    ]
  },
  {
    "key": "VM",
    "category": "compute",
    "clouds": [
      "aws"
    ],
    "tags": [
      "compute",
      "cloud-agnostic"
    ],
    "description": "Generic VM hosted in the cloud (i.e. EC2)",
    "params": [
      {
        "param": "aws_ami",
        "description": "AWS AMI to spawn for the container",
        "data_type": "string",
        "required": true
      },
      {
        "param": "aws_instance_type",
        "description": "AWS EC2 Instance type to use for the container",
        "data_type": "string",
        "required": true
      },
      {
        "param": "user_data",
        "description": "User data to be used to configure the VM when it is launched",
        "data_type": "string",
        "required": false
      },
      {
        "param": "instance_count",
        "description": "Number of EC2 "
      }
    ]
  },
  {
    "key": "docker",
    "category": "compute",
    "clouds": [
      "aws"
    ],
    "tags": [
      "compute",
      "cloud-agnostic"
    ],
    "description": "Generic docker container running in the cloud",
    "params": [
      {
        "param": "aws_ecs_cluster_name",
        "description": "ECS cluster name",
        "data_type": "string",
        "required": false
      },
      {
        "param": "aws_ami",
        "description": "AWS AMI to spawn for the container",
        "data_type": "string",
        "required": true
      },
      {
        "param": "aws_instance_type",
        "description": "AWS EC2 Instance type to use for the container",
        "data_type": "string",
        "required": true
      },
      {
        "param": "container_name",
        "description": "Docker container name",
        "data_type": "string",
        "required": true
      },
      {
        "param": "image_url",
        "description": "URL for the Docker image to be deployed",
        "data_type": "string",
        "required": true
      },
      {
        "param": "cpu_cores",
        "description": "Number of CPU cores needed",
        "data_type": "number",
        "required": false
      },
      {
        "param": "memory",
        "description": "Amount of memory needed for the container, in MB",
        "data_type": "number",
        "required": false
      },
      {
        "param": "desired_count",
        "description": "Number of Docker containers to run",
        "data_type": "number",
        "required": false
      },
      {
        "param": "healthcheck_path",
        "description": "Healthcheck path for the container",
        "data_type": "string",
        "required": true
      },
      {
        "param": "autoscale_min",
        "description": "Minimum autoscale (number of EC2 instances)",
        "data_type": "number",
        "required": true
      },
      {
        "param": "autoscale_max",
        "description": "Maximum autoscale (number of EC2 instances)",
        "data_type": "number",
        "required": true
      },
      {
        "param": "autoscale_target",
        "description": "Target autoscale (number of EC2 instances)",
        "data_type": "number",
        "required": true
      },
      {
        "param": "ssh_pubkey",
        "description": "Path to an SSH public key, default \"~/.ssh/id_rsa.pub\"",
        "data_type": "string",
        "required": false
      },
      {
        "param": "is_public",
        "description": "Wether container should exposed to the internet, default false",
        "data_type": "bool",
        "required": false
      },
      {
        "param": "num_of_azs",
        "description": "Number of Availability Zones to be used by the deployment",
        "data_type": "number",
        "required": false
      },
      {
        "param": "volume_name",
        "description": "Name of the volume to be used in the container",
        "data_type": "string",
        "required": true
      },
      {
        "param": "volume_path",
        "description": "Path to the volume in the container",
        "data_type": "string",
        "required": true
      },
      {
        "param": "container_definition",
        "description": "ContainerDefinition JSON: https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ContainerDefinition.html",
        "data_type": "string",
        "required": true
      }
    ]
  },
  {
    "key": "postgresql",
    "category": "database",
    "clouds": [
      "aws"
    ],
    "tags": [
      "database",
      "rdbms",
      "sql"
    ],
    "description": "Open source relational database (SQL-RDBMS)"
  }
]