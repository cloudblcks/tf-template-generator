resource "aws_vpc" "vpc-{{ vpc_uid }}" {
  cidr_block           = "10.0.0.0/16"
  enable_dns_support   = true
  enable_dns_hostnames = true
}

data "aws_region" "current" {}

{% if has_public_subnet %}
resource "aws_route_table" "public-route-table-{{ vpc_uid }}" {
  vpc_id = aws_vpc.vpc-{{ vpc_uid }}.id
}

{% for az in azs %}

resource "aws_subnet" "public-subnet-{{ loop.index }}-{{ vpc_uid }}" {
  cidr_block        = "{{ subnet_cidrs[loop.index0] }}"
  vpc_id            = aws_vpc.vpc-{{ vpc_uid }}.id
  availability_zone = format("%s%s", data.aws_region.current.name, "{{ az }}")
}

resource "aws_route_table_association" "public-route-{{ loop.index }}-association-{{ vpc_uid }}" {
  route_table_id = aws_route_table.public-route-table-{{ vpc_uid }}.id
  subnet_id      = aws_subnet.public-subnet-{{ loop.index }}-{{ vpc_uid }}.id
}

{% endfor %}

# Public Subnet Internet Gateway
resource "aws_internet_gateway" "igw-{{ vpc_uid }}" {
  vpc_id = aws_vpc.vpc-{{ vpc_uid }}.id
}


# Route the public subnet traffic through the Internet Gateway
resource "aws_route" "public-internet-igw-route-{{ vpc_uid }}" {
  route_table_id         = aws_route_table.public-route-table-{{ vpc_uid }}.id
  gateway_id             = aws_internet_gateway.igw-{{ vpc_uid }}.id
  destination_cidr_block = "0.0.0.0/0"
}


{% endif %}

{% if has_private_subnet %}
resource "aws_route_table" "private-route-table-{{ vpc_uid }}" {
  vpc_id = aws_vpc.vpc-{{ vpc_uid }}.id
}

{% for az in azs %}

resource "aws_subnet" "private-subnet-{{ loop.index }}-{{ vpc_uid }}" {
  cidr_block        = "{{ subnet_cidrs[loop.index0] }}"
  vpc_id            = aws_vpc.vpc-{{ vpc_uid }}.id
  availability_zone = format("%s%s", data.aws_region.current.name, "{{ az }}")
}



resource "aws_route_table_association" "private-route-{{ loop.index }}-association-{{ vpc_uid }}" {
  route_table_id = aws_route_table.private-route-table-{{ vpc_uid }}.id
  subnet_id      = aws_subnet.private-subnet-{{ loop.index }}-{{ vpc_uid }}.id
}

{% endfor %}

{% endif %}
